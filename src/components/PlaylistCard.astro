---
import { type PlaylistData } from "../types/playlist";
import type { ThumbnailObject } from "../types/objects";
import Config from "../config";

let full = Config.full;
let lite = Config.lite;
const cookiePrefs = Astro.cookies.get('p');
if (cookiePrefs) {
    full = cookiePrefs.json().full;
    lite = cookiePrefs.json().lite;
}

interface Props {
    data: PlaylistData;
}
const { data } = Astro.props;

const thumbnail = data.videos[0].videoThumbnails.find((t: ThumbnailObject) => t.quality === (lite ? "default" : "medium"))?.url;
---

<span class="container">
    <div class="thumbnail">
        <a href={`/playlist?list=${data.playlistId}`}>
            <img src={thumbnail} />
        </a>
        <p class="count">{data.videoCount} video{data.videoCount === 1 ? "" : "s"}</p>
    </div>
    <a href={`/playlist?list=${data.playlistId}`} class="text"><b>{data.title}</b></a>
    <br/>
    <a href=`/channel/${data.authorId}` class="text">{data.author}{data.authorVerified ? " â˜‘" : ""}</a>
</span>

<style>
    .container {
        display: inline-block;
        width: 20em;
    }
    .thumbnail {
        display: block;
        position: relative;
        box-sizing: border-box;
        width: 100%;
    }
    .thumbnail img {
        border-radius: 5%;
        width: 100%;
    }
    .count {
        background-color: var(--clr-surface);
        padding: 0.2em;
        margin: 0;
        z-index: 100;
        position: absolute;
        bottom: 0.8em;
        right: 0.6em;
    }
</style>