---
import { type VideoData, type VideoThumbnail } from "../types/video";
import { type VideoObject } from "../types/objects";

interface Props {
    data: VideoData | VideoObject;
}

const { data } = Astro.props;
const lengthHrs = ~~(data.lengthSeconds / 3600);
const lengthMins = ~~((data.lengthSeconds % 3600) / 60);
const lengthSecs = String(data.lengthSeconds % 60).padStart(2,'0');
const timeSince = (timestamp: number) => {
    const now = Math.floor(Date.now() / 1000);
    const secs = now - timestamp;
    if (secs === 1) return "1 second ago"; // i love edge cases
    else if (secs < 60) return `${secs} seconds ago`;
    else if (secs === 60) return "1 minute ago";
    else if (secs < 3600) return `${~~(secs / 60)} minutes ago`;
    else if (secs === 3600) return "1 hour ago";
    else if (secs < 86400) return `${~~(secs / 3600)} hours ago`;
    else if (secs === 86400) return "1 day ago";
    else if (secs < 2629746) return `${~~(secs / 86400)} days ago`;
    else if (secs === 2629746) return "1 month ago";
    else if (secs < 31536000) return `${~~(secs / 2629746)} months ago`;
    else if (secs === 31536000) return "1 year ago";
    else return `${~~(secs / 31536000)} years ago`;
}
---

<span class="container">
    <div class="thumbnail">
        <a href={`/watch?v=${data.videoId}`}>
            <img src={data.videoThumbnails.find((t: VideoThumbnail) => t.quality === "medium")?.url} />
        </a>
        <p class="length">{`${(lengthHrs===0)?"":lengthHrs+":"}${(lengthMins)}:${lengthSecs}`}</p>
    </div>
    <a href={`/watch?v=${data.videoId}`} class="text"><b>{data.title}</b></a>
    <br/>
    <a href={`/channel/${data.authorId}`} class="text">{data.author}</a>
    <br/>
    <b class="subtext">Uploaded {timeSince(data.published)}</b>
</span>

<style>
    .container {
        display: inline-block;
        width: 20em;
    }
    .thumbnail {
        position: relative;
        box-sizing: border-box;
    }
    .thumbnail img {
        border-radius: 5%;
    }
    .length {
        background-color: var(--clr-surface);
        padding: 0.2em;
        margin: 0;
        z-index: 100;
        position: absolute;
        bottom: 0.8em;
        right: 0.6em;
    }
</style>